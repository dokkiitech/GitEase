{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_toolbar_title = _resolveComponent(\"v-toolbar-title\");\n  const _component_v_app_bar = _resolveComponent(\"v-app-bar\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_snackbar = _resolveComponent(\"v-snackbar\");\n  const _component_v_main = _resolveComponent(\"v-main\");\n  const _component_v_app = _resolveComponent(\"v-app\");\n  return _openBlock(), _createBlock(_component_v_app, null, {\n    default: _withCtx(() => [_createCommentVNode(\" メニューバー \"), _createVNode(_component_v_app_bar, {\n      app: \"\",\n      color: \"primary\",\n      dark: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_toolbar_title, null, {\n        default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"Git Pull Generator\")])),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" コンテンツ \"), _createVNode(_component_v_main, null, {\n      default: _withCtx(() => [_createVNode(_component_v_container, null, {\n        default: _withCtx(() => [_createVNode(_component_v_form, {\n          ref: \"form\"\n        }, {\n          default: _withCtx(() => [_createCommentVNode(\" リモート名 \"), _createVNode(_component_v_text_field, {\n            label: \"リモート名 (例: origin)\",\n            modelValue: $data.gitData.remote,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.gitData.remote = $event),\n            required: \"\"\n          }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" Branch名 (任意) \"), _createVNode(_component_v_text_field, {\n            label: \"Branch名 (任意)\",\n            modelValue: $data.gitData.branch,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.gitData.branch = $event)\n          }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" コピーするボタン \"), _createVNode(_component_v_btn, {\n            onClick: $options.copyToClipboard,\n            color: \"primary\"\n          }, {\n            default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"Git Pull コマンドをコピー\")])),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        }, 512 /* NEED_PATCH */)]),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" ポップアップメッセージ \"), _createVNode(_component_v_snackbar, {\n        modelValue: $data.snackbar.show,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.snackbar.show = $event),\n        color: $data.snackbar.color,\n        timeout: \"2000\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($data.snackbar.message), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\", \"color\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_app","default","_withCtx","_createCommentVNode","_createVNode","_component_v_app_bar","app","color","dark","_component_v_toolbar_title","_cache","_createTextVNode","_","_component_v_main","_component_v_container","_component_v_form","ref","_component_v_text_field","label","modelValue","$data","gitData","remote","$event","required","branch","_component_v_btn","onClick","$options","copyToClipboard","_component_v_snackbar","snackbar","show","timeout","_toDisplayString","message"],"sources":["/Users/dokkiitech/dev/IntelliJ/Vuetify/GitEase/front/src/pages/GitPullCommandCopy.vue"],"sourcesContent":["<template>\n  <v-app>\n    <!-- メニューバー -->\n    <v-app-bar app color=\"primary\" dark>\n      <v-toolbar-title>Git Pull Generator</v-toolbar-title>\n    </v-app-bar>\n\n    <!-- コンテンツ -->\n    <v-main>\n      <v-container>\n        <v-form ref=\"form\">\n          <!-- リモート名 -->\n          <v-text-field\n              label=\"リモート名 (例: origin)\"\n              v-model=\"gitData.remote\"\n              required\n          ></v-text-field>\n\n          <!-- Branch名 (任意) -->\n          <v-text-field\n              label=\"Branch名 (任意)\"\n              v-model=\"gitData.branch\"\n          ></v-text-field>\n\n          <!-- コピーするボタン -->\n          <v-btn @click=\"copyToClipboard\" color=\"primary\">Git Pull コマンドをコピー</v-btn>\n        </v-form>\n      </v-container>\n\n      <!-- ポップアップメッセージ -->\n      <v-snackbar v-model=\"snackbar.show\" :color=\"snackbar.color\" timeout=\"2000\">\n        {{ snackbar.message }}\n      </v-snackbar>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      // フォームデータを格納するオブジェクト\n      gitData: {\n        remote: \"\",\n        branch: \"\",\n      },\n      // Snackbarの状態管理\n      snackbar: {\n        show: false,\n        message: \"\",\n        color: \"\",\n      },\n    };\n  },\n  methods: {\n    // Git Pullコマンドを生成し、クリップボードにコピーする処理\n    copyToClipboard() {\n      const { remote, branch } = this.gitData;\n\n      // 必須項目のチェック\n      if (!remote) {\n        this.showSnackbar(\"リモート名は必須です。\", \"red\");\n        return;\n      }\n\n      // Git Pull コマンドを生成\n      let pullCommand = `git pull ${remote}`;\n      if (branch) {\n        pullCommand += ` ${branch}`;\n      }\n\n      // クリップボードにコピー\n      if (navigator.clipboard && navigator.clipboard.writeText) {\n        navigator.clipboard\n            .writeText(pullCommand.trim())\n            .then(() => {\n              this.showSnackbar(\"クリップボードにコピーしました！\", \"green\");\n            })\n            .catch((err) => {\n              console.error(\"コピーに失敗しました: \", err);\n              this.showSnackbar(\"コピーに失敗しました。\", \"red\");\n            });\n      } else {\n        // フォールバック方式: テキストエリアを使用\n        const textArea = document.createElement(\"textarea\");\n        textArea.value = pullCommand.trim();\n        document.body.appendChild(textArea);\n        textArea.select();\n        try {\n          document.execCommand(\"copy\");\n          this.showSnackbar(\"クリップボードにコピーしました！\", \"green\");\n        } catch (err) {\n          console.error(\"コピーに失敗しました: \", err);\n          this.showSnackbar(\"コピーに失敗しました。\", \"red\");\n        } finally {\n          document.body.removeChild(textArea);\n        }\n      }\n    },\n\n    // Snackbarを表示する汎用メソッド\n    showSnackbar(message, color) {\n      this.snackbar.message = message;\n      this.snackbar.color = color;\n      this.snackbar.show = true;\n    },\n  },\n};\n</script>"],"mappings":";;;;;;;;;;;uBACEA,YAAA,CAiCQC,gBAAA;IAlCVC,OAAA,EAAAC,QAAA,CAEI,MAAe,CAAfC,mBAAA,YAAe,EACfC,YAAA,CAEYC,oBAAA;MAFDC,GAAG,EAAH,EAAG;MAACC,KAAK,EAAC,SAAS;MAACC,IAAI,EAAJ;;MAHnCP,OAAA,EAAAC,QAAA,CAIM,MAAqD,CAArDE,YAAA,CAAqDK,0BAAA;QAJ3DR,OAAA,EAAAC,QAAA,CAIuB,MAAkBQ,MAAA,QAAAA,MAAA,OAJzCC,gBAAA,CAIuB,oBAAkB,E;QAJzCC,CAAA;;MAAAA,CAAA;QAOIT,mBAAA,WAAc,EACdC,YAAA,CAyBSS,iBAAA;MAjCbZ,OAAA,EAAAC,QAAA,CASM,MAkBc,CAlBdE,YAAA,CAkBcU,sBAAA;QA3BpBb,OAAA,EAAAC,QAAA,CAUQ,MAgBS,CAhBTE,YAAA,CAgBSW,iBAAA;UAhBDC,GAAG,EAAC;QAAM;UAV1Bf,OAAA,EAAAC,QAAA,CAWU,MAAc,CAAdC,mBAAA,WAAc,EACdC,YAAA,CAIgBa,uBAAA;YAHZC,KAAK,EAAC,mBAAmB;YAbvCC,UAAA,EAcuBC,KAAA,CAAAC,OAAO,CAACC,MAAM;YAdrC,uBAAAZ,MAAA,QAAAA,MAAA,MAAAa,MAAA,IAcuBH,KAAA,CAAAC,OAAO,CAACC,MAAM,GAAAC,MAAA;YACvBC,QAAQ,EAAR;mDAGJrB,mBAAA,kBAAqB,EACrBC,YAAA,CAGgBa,uBAAA;YAFZC,KAAK,EAAC,cAAc;YApBlCC,UAAA,EAqBuBC,KAAA,CAAAC,OAAO,CAACI,MAAM;YArBrC,uBAAAf,MAAA,QAAAA,MAAA,MAAAa,MAAA,IAqBuBH,KAAA,CAAAC,OAAO,CAACI,MAAM,GAAAF,MAAA;mDAG3BpB,mBAAA,cAAiB,EACjBC,YAAA,CAAyEsB,gBAAA;YAAjEC,OAAK,EAAEC,QAAA,CAAAC,eAAe;YAAEtB,KAAK,EAAC;;YAzBhDN,OAAA,EAAAC,QAAA,CAyB0D,MAAiBQ,MAAA,QAAAA,MAAA,OAzB3EC,gBAAA,CAyB0D,mBAAiB,E;YAzB3EC,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;UA6BMT,mBAAA,iBAAoB,EACpBC,YAAA,CAEa0B,qBAAA;QAhCnBX,UAAA,EA8B2BC,KAAA,CAAAW,QAAQ,CAACC,IAAI;QA9BxC,uBAAAtB,MAAA,QAAAA,MAAA,MAAAa,MAAA,IA8B2BH,KAAA,CAAAW,QAAQ,CAACC,IAAI,GAAAT,MAAA;QAAGhB,KAAK,EAAEa,KAAA,CAAAW,QAAQ,CAACxB,KAAK;QAAE0B,OAAO,EAAC;;QA9B1EhC,OAAA,EAAAC,QAAA,CA+BQ,MAAsB,CA/B9BS,gBAAA,CAAAuB,gBAAA,CA+BWd,KAAA,CAAAW,QAAQ,CAACI,OAAO,iB;QA/B3BvB,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}