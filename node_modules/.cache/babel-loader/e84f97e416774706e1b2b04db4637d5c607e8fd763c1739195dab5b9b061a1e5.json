{"ast":null,"code":"export default {\n  data() {\n    return {\n      // フォームデータを格納するオブジェクト\n      gitData: {\n        remote: \"\",\n        branch: \"\"\n      },\n      // Snackbarの状態管理\n      snackbar: {\n        show: false,\n        message: \"\",\n        color: \"\"\n      }\n    };\n  },\n  methods: {\n    // Git Pullコマンドを生成し、クリップボードにコピーする処理\n    copyToClipboard() {\n      const {\n        remote,\n        branch\n      } = this.gitData;\n\n      // 必須項目のチェック\n      if (!remote) {\n        this.showSnackbar(\"リモート名は必須です。\", \"red\");\n        return;\n      }\n\n      // Git Pull コマンドを生成\n      let pullCommand = `git pull ${remote}`;\n      if (branch) {\n        pullCommand += ` origin ${branch}`;\n      }\n\n      // クリップボードにコピー\n      if (navigator.clipboard && navigator.clipboard.writeText) {\n        navigator.clipboard.writeText(pullCommand.trim()).then(() => {\n          this.showSnackbar(\"クリップボードにコピーしました！\", \"green\");\n        }).catch(err => {\n          console.error(\"コピーに失敗しました: \", err);\n          this.showSnackbar(\"コピーに失敗しました。\", \"red\");\n        });\n      } else {\n        // フォールバック方式: テキストエリアを使用\n        const textArea = document.createElement(\"textarea\");\n        textArea.value = pullCommand.trim();\n        document.body.appendChild(textArea);\n        textArea.select();\n        try {\n          document.execCommand(\"copy\");\n          this.showSnackbar(\"クリップボードにコピーしました！\", \"green\");\n        } catch (err) {\n          console.error(\"コピーに失敗しました: \", err);\n          this.showSnackbar(\"コピーに失敗しました。\", \"red\");\n        } finally {\n          document.body.removeChild(textArea);\n        }\n      }\n    },\n    // Snackbarを表示する汎用メソッド\n    showSnackbar(message, color) {\n      this.snackbar.message = message;\n      this.snackbar.color = color;\n      this.snackbar.show = true;\n    }\n  }\n};","map":{"version":3,"names":["data","gitData","remote","branch","snackbar","show","message","color","methods","copyToClipboard","showSnackbar","pullCommand","navigator","clipboard","writeText","trim","then","catch","err","console","error","textArea","document","createElement","value","body","appendChild","select","execCommand","removeChild"],"sources":["/Users/dokkiitech/dev/IntelliJ/Vuetify/GitEase/front/src/pages/GitPullCommandCopy.vue"],"sourcesContent":["<template>\n  <v-app>\n    <!-- メニューバー -->\n    <v-app-bar app color=\"primary\" dark>\n      <v-toolbar-title>Git Pull Generator</v-toolbar-title>\n    </v-app-bar>\n\n    <!-- コンテンツ -->\n    <v-main>\n      <v-container>\n        <v-form ref=\"form\">\n          <!-- リモート名 -->\n          <v-text-field\n              label=\"リモート名 (例: origin)\"\n              v-model=\"gitData.remote\"\n              required\n          ></v-text-field>\n\n          <!-- Branch名 (任意) -->\n          <v-text-field\n              label=\"Branch名 (任意)\"\n              v-model=\"gitData.branch\"\n          ></v-text-field>\n\n          <!-- コピーするボタン -->\n          <v-btn @click=\"copyToClipboard\" color=\"primary\">Git Pull コマンドをコピー</v-btn>\n        </v-form>\n      </v-container>\n\n      <!-- ポップアップメッセージ -->\n      <v-snackbar v-model=\"snackbar.show\" :color=\"snackbar.color\" timeout=\"2000\">\n        {{ snackbar.message }}\n      </v-snackbar>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      // フォームデータを格納するオブジェクト\n      gitData: {\n        remote: \"\",\n        branch: \"\",\n      },\n      // Snackbarの状態管理\n      snackbar: {\n        show: false,\n        message: \"\",\n        color: \"\",\n      },\n    };\n  },\n  methods: {\n    // Git Pullコマンドを生成し、クリップボードにコピーする処理\n    copyToClipboard() {\n      const { remote, branch } = this.gitData;\n\n      // 必須項目のチェック\n      if (!remote) {\n        this.showSnackbar(\"リモート名は必須です。\", \"red\");\n        return;\n      }\n\n      // Git Pull コマンドを生成\n      let pullCommand = `git pull ${remote}`;\n      if (branch) {\n        pullCommand += ` origin ${branch}`;\n      }\n\n      // クリップボードにコピー\n      if (navigator.clipboard && navigator.clipboard.writeText) {\n        navigator.clipboard\n            .writeText(pullCommand.trim())\n            .then(() => {\n              this.showSnackbar(\"クリップボードにコピーしました！\", \"green\");\n            })\n            .catch((err) => {\n              console.error(\"コピーに失敗しました: \", err);\n              this.showSnackbar(\"コピーに失敗しました。\", \"red\");\n            });\n      } else {\n        // フォールバック方式: テキストエリアを使用\n        const textArea = document.createElement(\"textarea\");\n        textArea.value = pullCommand.trim();\n        document.body.appendChild(textArea);\n        textArea.select();\n        try {\n          document.execCommand(\"copy\");\n          this.showSnackbar(\"クリップボードにコピーしました！\", \"green\");\n        } catch (err) {\n          console.error(\"コピーに失敗しました: \", err);\n          this.showSnackbar(\"コピーに失敗しました。\", \"red\");\n        } finally {\n          document.body.removeChild(textArea);\n        }\n      }\n    },\n\n    // Snackbarを表示する汎用メソッド\n    showSnackbar(message, color) {\n      this.snackbar.message = message;\n      this.snackbar.color = color;\n      this.snackbar.show = true;\n    },\n  },\n};\n</script>"],"mappings":"AAsCA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,OAAO,EAAE;QACPC,MAAM,EAAE,EAAE;QACVC,MAAM,EAAE;MACV,CAAC;MACD;MACAC,QAAQ,EAAE;QACRC,IAAI,EAAE,KAAK;QACXC,OAAO,EAAE,EAAE;QACXC,KAAK,EAAE;MACT;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,eAAeA,CAAA,EAAG;MAChB,MAAM;QAAEP,MAAM;QAAEC;MAAO,IAAI,IAAI,CAACF,OAAO;;MAEvC;MACA,IAAI,CAACC,MAAM,EAAE;QACX,IAAI,CAACQ,YAAY,CAAC,aAAa,EAAE,KAAK,CAAC;QACvC;MACF;;MAEA;MACA,IAAIC,WAAU,GAAI,YAAYT,MAAM,EAAE;MACtC,IAAIC,MAAM,EAAE;QACVQ,WAAU,IAAK,WAAWR,MAAM,EAAE;MACpC;;MAEA;MACA,IAAIS,SAAS,CAACC,SAAQ,IAAKD,SAAS,CAACC,SAAS,CAACC,SAAS,EAAE;QACxDF,SAAS,CAACC,SAAQ,CACbC,SAAS,CAACH,WAAW,CAACI,IAAI,CAAC,CAAC,EAC5BC,IAAI,CAAC,MAAM;UACV,IAAI,CAACN,YAAY,CAAC,kBAAkB,EAAE,OAAO,CAAC;QAChD,CAAC,EACAO,KAAK,CAAEC,GAAG,IAAK;UACdC,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEF,GAAG,CAAC;UAClC,IAAI,CAACR,YAAY,CAAC,aAAa,EAAE,KAAK,CAAC;QACzC,CAAC,CAAC;MACR,OAAO;QACL;QACA,MAAMW,QAAO,GAAIC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;QACnDF,QAAQ,CAACG,KAAI,GAAIb,WAAW,CAACI,IAAI,CAAC,CAAC;QACnCO,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,QAAQ,CAAC;QACnCA,QAAQ,CAACM,MAAM,CAAC,CAAC;QACjB,IAAI;UACFL,QAAQ,CAACM,WAAW,CAAC,MAAM,CAAC;UAC5B,IAAI,CAAClB,YAAY,CAAC,kBAAkB,EAAE,OAAO,CAAC;QAChD,EAAE,OAAOQ,GAAG,EAAE;UACZC,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEF,GAAG,CAAC;UAClC,IAAI,CAACR,YAAY,CAAC,aAAa,EAAE,KAAK,CAAC;QACzC,UAAU;UACRY,QAAQ,CAACG,IAAI,CAACI,WAAW,CAACR,QAAQ,CAAC;QACrC;MACF;IACF,CAAC;IAED;IACAX,YAAYA,CAACJ,OAAO,EAAEC,KAAK,EAAE;MAC3B,IAAI,CAACH,QAAQ,CAACE,OAAM,GAAIA,OAAO;MAC/B,IAAI,CAACF,QAAQ,CAACG,KAAI,GAAIA,KAAK;MAC3B,IAAI,CAACH,QAAQ,CAACC,IAAG,GAAI,IAAI;IAC3B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}